#include <iostream>
#include <gtest/gtest.h>
#include "file.pb.h"
#include "serialise/serialise.h"
#include "parser/parser.h"

int main()
{
	::TestTask::Messages::FastResponse *fastResponse = new ::TestTask::Messages::FastResponse();
	fastResponse->set_current_date_time("AAABBBCCC");
	TestTask::Messages::WripperMessage wripperMessage;
	wripperMessage.set_allocated_fast_response(fastResponse);
	PointerToConstData pointer_to_data(serialiseDelimited(wripperMessage));
	for(auto i: *pointer_to_data)
		std::cout << static_cast<int>(i) << "_";
	std::cout << std::endl;
	TestTask::Messages::WripperMessage wMessage;
	std::cout << wMessage.has_fast_response() << std::endl;
	//std::string str = "";
	//for(size_t i = 1; i < (*pointer_to_data)[0] + 1; i++)
	//	str += (*pointer_to_data)[i];
	//wMessage.ParseFromString(str);
	size_t l = 0;
	wMessage = *parseDelimited(static_cast<const void*> (&pointer_to_data), (size_t) 14, *l);
	std::cout << wMessage.has_fast_response() << std::endl;
	std::cout << wMessage.fast_response().current_date_time() << std::endl;
	return 0;
}

//testing::InitGoogleTest(&argc, argv);
//RUN_ALL_TESTS();
